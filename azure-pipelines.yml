variables:
  pullRequestId: $(System.PullRequest.PullRequestId)

trigger:
  - main

pr:
  - main

pool:
  name: 'DevOps XM Linux'

stages:
- stage: ContinuosIntegration
  jobs:
    - job: TestAndSscan
      displayName: 'Test and scan'
      variables:
      - group: xm-solarlib

      steps:
        - script: pip install --upgrade poetry tox
          displayName: 'Install pip'
        - script: |
            curl -sSL https://install.python-poetry.org | python3 -
          displayName: 'Install Poetry'
        - script: |
            echo "##vso[task.prependpath]$HOME/.local/bin"
          displayName: 'Add Poetry to PATH'
        - script: echo $PATH
          displayName: 'Check PATH'
        - script: poetry --version
          displayName: 'Check Poetry Version'
        - script: poetry install
          displayName: 'Install dependencies with Poetry'
        - task: SonarQubePrepare@5
          displayName: 'Preparing SonarQube scanner'
          inputs:
            SonarQube: 'SC_SONAR_CODEQUALITY'
            scannerMode: 'CLI'
            configMode: 'manual'
            cliProjectKey: $(system.teamProject)
            cliProjectName: $(system.teamProject)
            extraProperties: |
              sonar.exclusions=**/*.bin,**/test_*
              sonar.python.coverage.reportPaths=$(System.DefaultWorkingDirectory)/coverage.xml
        - script: poetry run pytest
          displayName: 'Run Tests'
          continueOnError: true
        - bash: |
            echo "Directorio Actual: $(pwd)"
            echo "Contenido del Directorio:"
            ls -la
        - task: SonarQubeAnalyze@5
          displayName: "Running SonarQube scanner"
        - script: python3 setup.py sdist bdist_wheel
          displayName: 'Generar gz'
        #- task: PublishBuildArtifacts@1
        #  displayName: 'Guardar build'
        #  inputs:
        #    PathtoPublish: 'dist'
        #    ArtifactName: 'xm_solarlib_build'
        #    publishLocation: 'Container'
        #- bash: |
        #    echo "Directorio build: $(Build.ArtifactStagingDirectory)"
        #    echo "Contenido del Directorio:"
        #    ls -la
        #- ${{ if in(variables['Build.SourceBranchName'], 'main') }}:
        #  - script: poetry build
        #    displayName: 'Build package'
        #  - script: echo "machine pkgs.dev.azure.com login $(username) password $(token)" > ~/.netrc
        #    displayName: 'Configure .netrc'
          #- script: |
          #    poetry config repositories.xm-solarlib https://pkgs.dev.azure.com/XM-Mercado/b41b22c4-616e-4744-a092-da2cc2d2b926/_packaging/XM-Feed-SOLARLIB/pypi/upload/
          #    poetry publish --repository xm-solarlib -u $(username) -p $(token)
          #  displayName: 'Publish Library'